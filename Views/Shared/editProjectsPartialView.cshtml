@model IEnumerable<GppApp.Models.ProjectsViewModel>
@{
    ViewBag.Title = "Project Items";
}
<style type="text/css">
    .elem, .elem * {
        box-sizing: border-box;
        margin: 0 !important;
    }

    .elem {
        display: inline-block;
        font-size: 0;
        width: 33%;
        border: 20px solid transparent;
        border-bottom: none;
        background: #fff;
        padding: 10px;
        height: auto;
        background-clip: padding-box;
    }

        .elem > span {
            display: block;
            cursor: pointer;
            height: 0;
            padding-bottom: 70%;
            background-size: cover;
            background-position: center center;
        }

    .hide, .hideArea, .hideDate, .hideChecked, .showBlueBar, .hideSection, .hideFooter, .showFooter, .getId {
        display: none;
    }

    .mdi-history::before, .alignText {
        font-size: 20px;
        text-align: center;
    }

    .bs-example {
        margin: 20px;
    }
</style>
<div>
    <div class="d-flex justify-content-between">
        <div><input type="button" class="btn btn-success" id="floatLeft" value="Generate PDF" /></div>
        <div class="col-lg-12"><a id="openModal" class="btn btn-primary" data-toggle="modal" data-target="#myProjectItems">Add Items</a>><a id="approval" class="btn btn-inverse-warning">Save for Submission</a></div>
        <div class="col-lg-12" id="floatRight"><a id="confirm" class="btn btn-primary">Confirm</a> &nbsp; <a id="delete" class="btn btn-danger">Delete</a></div>
    </div>
</div>
<br />
@*Add Project Items*@
<div id="myProjectItems" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4>Add Project Items <span class="spanId"></span></h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group hide">
                        <label for="Id">Id</label>
                        <input type="text" class="form-control" id="id" />
                        <span class="hideSection" id="preId"></span>
                    </div>
                    <div class="form-group">
                        <label for="ItemDescription">Item Description</label>
                        <input type="text" class="form-control" id="editor1" placeholder="Description" />
                        <span class="hideSection" id="preEditor1"></span>
                    </div>
                    <div class="form-group hideArea">
                        <label for="projectNotes">Notes</label>
                        <input type="text" class="form-control" id="projectNotes" placeholder="Notes" />
                        <span class="hideSection" id="preProjectNotes"></span>
                    </div>
                    <div class="form-group">
                        <label for="CreatedOn">Created On</label>
                        <input type="text" class="form-control" id="projectCreatedOn" />
                        <span class="hideSection" id="preProjectCreatedOn"></span>
                    </div>
                    <div class="form-group hideThisStatus">
                        <label for="Status">Checked ?</label>
                        <input type="checkbox" class="form-control" id="addCheckedStatus" />
                    </div>
                    <div class="form-group">
                        <label for="itemImage">Image</label>
                        <input type="file" name="Image" value="" onchange="return ShowImagePreview(this)" class="form-control" id="uploadImg" /><div></div>
                        <img src="~/img/default.jpg" alt="preview" id="imagePreview" style="border: 1px solid red; height: 200px; width: 200px; margin: auto; display: block;" />

                        Select To Use Default Image <input type="checkbox" class="form-control" id="addDefaultImg" name="addDefaultImg" />

                        <span class="hideSection" id="preProjectId"></span>
                        <span class="hideSection" id="preUploadImg"></span>
                        <span id="createdBy" class="hideSection"></span>
                        <span id="preChecked" class="hideSection"></span>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <input type="button" class="btn btn-default" id="addData" value="Add" />
                <input type="button" class="btn btn-default" id="updateData" value="Update" />
            </div>
        </div>
    </div>
</div>
@*Show Project Items History*@
<div id="myProjectItemsHistory" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4>Project Items Update History</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div id="projectItemsHistory"></div>
            </div>
            <div class="modal-footer">
            </div>
        </div>
    </div>
</div>
@*Show images here*@
<div id="myProjectImages" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabe2" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4>Image Details<span class="spanId"></span></h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="images"></div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-12 grid-margin stretch-card">
        <div class="card overrideCard">
            <div class='page-footer'>I'm The Footer</div>
            <div class="card-body" id="card">
            </div>

            <div class="card-body" id="cardNew">
            </div>
        </div>
    </div>
    <div class="hide">
    </div>
</div>
<script src="~/ckeditor/ckeditor.js"></script>
<script>
    //Hide modal initially
    $('#myProjectItems').modal('hide');
    $('#updateData').hide();
    $('.hideThisStatus').hide();
    $("#delete").hide();
    $("#confirm").hide();
    $("#approval").hide();
    $("#cardNew").hide();

    $('#addDefaultImg').click(function () {
        if ($('input[name="addDefaultImg"]:checked').length == 1) {
            $('#imagePreview').attr('src', '/img/no_notes.png');
        } else {
            $('#imagePreview').attr('src', '/img/default.jpg');
        }
    });

    //Open modal on click
    $('#openModal').click(function () {
        CheckSession();

        //Initialize CKEditor by giving id of text area
        CKEDITOR.replace('editor1');

        //Get each instance of CKEditor
        for (instance in CKEDITOR.instances) {
            //update element
            CKEDITOR.instances[instance].updateElement();
        }

        CKEDITOR.instances['editor1'].setData('');
        $('#projectNotes').val('');
        $('#projectCreatedOn').val('');

        $('#updateData').hide();
        $('#addData').show();
        $('#myProjectItems').modal('show');
        $(".spanId").html($(".card-title").html());
        $('.hideThisStatus').hide();
    });

    //Hide modal on click
    $("#closbtn").click(function () {
        CheckSession();

        $('#myProjectItems').modal('hide');
    });

    //SyncFusion date picker
    var datepicker = new ej.calendars.DatePicker({ width: "255px", color: "red", format: "MM/dd/yyyy" });
    datepicker.appendTo('#projectCreatedOn');

    //CKEditor
    //Initialize CKEditor by giving id of text area
    //CKEDITOR.config.width = 800;
    CKEDITOR.replace('editor1');

    //Get each instance of CKEditor
    for (instance in CKEDITOR.instances) {
        CKEDITOR.instances[instance].updateElement();
    }

    //Add project items here
    $('#addData').click(function () {
        CheckSession();

        var id = '@ViewBag.projectId';

        $('.card-body').empty();
        var aProjectItems = {};

        var res = validate();
        if (res == true) {
            $('#projects').empty();

            aProjectItems.ProjectId = id;
            aProjectItems.ItemDescription = CKEDITOR.instances['editor1'].getData();  //Set CKEditor value using jQuery
            aProjectItems.ProjectNotes = $("#projectNotes").val();
            aProjectItems.CreatedOn = $("#projectCreatedOn").val();

            $.ajax({
                type: "POST",
                url: "/Dashboard/AddProjectItems",
                data: JSON.stringify({ aProjectItems }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    alert("Project item added successfully!");

                    //Image upload
                    var data = new FormData();
                    var files = $("#uploadImg").get(0).files;
                    if (files.length > 0) {
                        data.append("MyImages", files[0]);
                    }

                    var strImg = "";
                    if ($('input[name="addDefaultImg"]:checked').length == 1) {
                        strImg = "1";
                    } else {
                        strImg = "0";
                    }

                    data.append("id", "");
                    data.append("uniqueId", parseInt(result));
                    data.append("imgName", "");
                    data.append("defaultImg", strImg);

                    $.ajax({
                        url: "/Dashboard/UploadImg",
                        type: "POST",
                        processData: false,
                        contentType: false,
                        data: data,
                        success: function (response) {
                            //$(".img-circle").attr('src', '/img/' + response);
                            $('#myProjectItems').modal('hide');

                            GetProjectItems();
                            GetProjectItemsInPdf();
                        },
                        error: function (er) {
                            //alert(er);
                        }
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
        } else {
            alert("Please! Fill up all fields.");
        }
    });

    //Update project items here
    $('#updateData').click(function () {
        CheckSession();

        var aProjectItemHistory = {};

        var res = validate();
        if (res == true) {
            $('#projects').empty();

            //Image upload
            var data = new FormData();
            var files = $("#uploadImg").get(0).files;
            if (files.length > 0) {
                data.append("MyImages", files[0]);
            }

            var strImg = "";
            if ($('input[name="addDefaultImg"]:checked').length == 1) {
                strImg = "1";
            } else {
                strImg = "0";
            }

            var txt = $(".spanId").html();
            data.append("id", "");
            data.append("uniqueId", $("#id").val());
            data.append("imgName", $('#imagePreview').attr('src').filename());
            data.append("defaultImg", strImg);

            //Update project item details
            aProjectItemHistory.Id = $("#id").val();
            aProjectItemHistory.ItemDescription = CKEDITOR.instances['editor1'].getData();  //Set CKEditor value using jQuery
            aProjectItemHistory.ProjectNotes = $("#projectNotes").val();

            //Update project item history
            aProjectItemHistory.ProjectId = $("#preProjectId").text();
            aProjectItemHistory.PreItemDescription = $("#preEditor1").text();  //Set CKEditor value using jQuery
            aProjectItemHistory.PreProjectNotes = $("#preProjectNotes").text();
            aProjectItemHistory.PreImage = $("#preUploadImg").text();
            aProjectItemHistory.PreCreatedOn = $("#preProjectCreatedOn").text();
            aProjectItemHistory.PreCreatedBy = $("#createdBy").text();

            if ($("#addCheckedStatus").prop('checked') == true) {
                aProjectItemHistory.PreChecked = true;
                //aProjectItemHistory.PreStatus = 1;
            } else {
                aProjectItemHistory.PreChecked = false;
                //aProjectItemHistory.PreStatus = 0;
            }

            $.ajax({
                type: "POST",
                url: "/Dashboard/UpdateItems",
                data: JSON.stringify({ aProjectItemHistory }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (value) {
                    alert(value);

                    $.ajax({
                        url: "/Dashboard/UploadImg",
                        type: "POST",
                        processData: false,
                        contentType: false,
                        data: data,
                        success: function (response) {
                            //$(".img-circle").attr('src', '/img/' + response);
                        },
                        error: function (er) {
                            alert(er);
                        }
                    });

                    $('#myProjectItems').modal('hide');

                    GetProjectItems();
                    GetProjectItemsInPdf();
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
        } else {
            alert("Please! Fill up all fields.");
        }
    });

    function ShowImagePreview(input) {
        debugger;
        if (input.files && input.files[0]) {
            var fname = input.files[0].name;
            var re = /(\.jpg|\.jpeg|\.bmp|\.gif|\.png)$/i;
            if (!re.exec(fname)) {
                alert("Image not supported!");
                $("#fileupload").val("");

                return false;
            }
            else {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#imagePreview').prop('src', e.target.result);
                };
                reader.readAsDataURL(input.files[0]);
            }
        }
    }

    GetProjectItems();
    GetProjectItemsInPdf();

    //Delete project items
    $("#delete").click(function () {
        CheckSession();

        var $container = $('.projectItems');
        var $checked = $container.find('.cbCheck:checked');
        var values = $checked.map(function () {
            return this.value
        }).get();

        var projectId = $(".getId").text();

        var cnfrm = confirm('Are you sure to delete?');
        if (cnfrm == true) {
            $.ajax({
                url: "/Dashboard/DeleteProjectItems",
                type: "POST",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify({ itemId: values.join(',') }),
                success: function (response) {
                    if (response != null || response != "") {
                        alert(response);

                        GetProjectItems();
                        GetProjectItemsInPdf();
                    }
                }
            });
        } else {
            return false;
        }
    });

    //Confirm project items
    $("#confirm").click(function () {
        CheckSession();

        var $container = $('.projectItems');
        var $checked = $container.find('.cbCheck:checked');
        var values = $checked.map(function () {
            return this.value
        }).get();

        var projectId = $(".getId").text();

        var cnfrm = confirm('Are you sure to confirm the project items?');
        if (cnfrm == true) {
            $.ajax({
                url: "/Dashboard/AddConfirmedItems",
                type: "POST",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify({ projectId: projectId, itemId: values.join(',') }),
                success: function (response) {
                    if (response != null || response != "") {
                        alert(response);

                        GetProjectItems();
                        GetProjectItemsInPdf();
                    }
                }
            });
        } else {
            return false;
        }
    });

    //Approval for submission
    $("#approval").click(function () {
        CheckSession();

        var $container = $('.projectItems');
        var $checked = $container.find('.cbCheck:checked');
        var values = $checked.map(function () {
            return this.value
        }).get();

        var projectId = $(".getId").text();

        var cnfrm = confirm('Are you sure to confirm the project items for approval?');
        if (cnfrm == true) {
            $.ajax({
                url: "/Dashboard/SubmitForApproval",
                type: "POST",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify({ projectId: projectId, itemId: values.join(',') }),
                success: function (response) {
                    if (response != null || response != "") {
                        alert(response);

                        GetProjectItems();
                        GetProjectItemsInPdf();
                    }
                }
            });
        } else {
            return false;
        }
    });

    //Get project items
    function GetProjectItems() {
        var html = "";
        var html2 = "";
        var id = '@ViewBag.projectId';

        var backColor = "";
        var status = "";
        var locked = "";
        var blueSection = "";

        $("#card").empty();

        $.ajax({
            url: "/Dashboard/GetProjectItems",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify({ id: id }),
            success: function (projects) {
                if (projects != null || projects != "") {

                    html += "<h4 class='card-title card-title-override hideId getProjectId'>" + projects[0].ProjectName + "</h4><h4 class='getId'>" + projects[0].ProjectId + "</h4><div class='table-responsive'>" +
                            "<table id='projects' class='table table-bordered table-contextual projectItems'><thead>" +
                            "<tr><th class='hideArea'>Date</th><th class='hideSelect'>Select</th><th class='action'>Action</th><th class='headingItemNo'> Item # </th><th class='hide'>Id</th><th>Item Description</th><th class='hide'>Notes</th><th class='hideDate'>Created On</th><th class='hideSelect'>History</th><th>Image</th><th class='hideChecked'>Checked?</th></tr></thead><tbody>";

                    $.each(projects, function (i, project) {
                        if (project.Checked == true) {
                            backColor = "<td class='checked hideChecked' style='background-color:#98FB98;-webkit-print-color-adjust: exact;'>CHECKED</td>";
                        } else {
                            backColor = "<td class='checked hideChecked' style='background-color:lightpink;-webkit-print-color-adjust: exact;'></td>"
                        }

                        var val = (parseInt(i) + 1);
                        var num = (parseInt(i) + 1);
                        //var num = (parseInt(project.TotalItems) + 1) - val;

                        if (project.ProStatus == 0) {
                            $('#openModal').hide();
                        } else {
                            $('#openModal').show();
                        }

                        if (project.Status == 0) {
                            status = "<td class='hideSelect'><input type='checkbox' class='cbCheck' name='cbCheck' value='" + project.Id + "' id='" + project.Id + "' /></td>";
                            locked = "<a class='editItems' data-projectId='" + project.ProjectId + "'>Edit</a>";
                        }
                        if (project.Status == 1 || project.ProStatus == 0) {
                            status = "<td class='hideSelect'><input type='checkbox' class='cbCheck hideSelect' checked='true' disabled name='cbCheck' value='" + project.Id + "' id='" + project.Id + "' /></td>";
                            locked = "<a href='javascript:void(0);'>Edit</a>";
                        }

                        if (project.SubmittedBy != "" && project.Checked == false) {
                            blueSection = "<div style='color: red;'><i style='margin-left: -20%;font-size:10px;'><b>SUBMITTED FOR ACTION " + getDateFormatted(project.SubmittedDt).toLocaleTimeString('en-US') + " " + getDateFormatted(project.SubmittedDt).toString().slice(0, 15) + "</b></i> <b style='margin-left: 18%;font-size:10px;'>Approved by " + project.SubmittedBy + "</b></div>";
                        }

                        if (project.SubmittedBy == "") {
                            blueSection = "";
                        }

                        html += "<tr> " + status +
                                "<td class='action hideSelect'>" + locked + "</td><td>" + num + "</td>" +
                                "<td class='hide hideId projectWithId'>" + project.Id + "</td>" +
                                "<td class='hideDate proCreatedOn'>" + getDateFormatted(project.ProCreatedOn).toString().slice(0, 15) + "</td>" +
                                "<td class='detailsWidth'>" + project.ItemDescription + "</td>" +
                                "<td class='hide'>" + project.ProjectNotes + "</td>" +
                                "<td class='hideDate'>" + (project.CreatedOn) + "</td><td class='alignText hideSelect'><i class='mdi mdi-history projectItemHistory'></i></td>" +
                                "<td><img id='showImages' height='270' width='240' src='/img/" + project.Image + "' /></td>" + backColor + "</tr><tr><td class='showBlueBar' height='20' colspan='10' style='background-color: lightblue; -webkit-print-color-adjust: exact;'>" + blueSection + "</td></tr>";

                    })

                    html += "</tbody></table><div id='footer'>Job ref. " + projects[0].ProjectName + " | Gold Property Partners l 07 5438 9775 l admin@goldpp.com.au l www.goldpp.com.au l Level 1, Suite 7, 9 Capital Place, Birtinya, Qld, 4575 Property of Gold Property Partners Pty Ltd. ABN 94 611 852 307. © Copyright protected.</div>";
                }

                $("#card").append(html);

                //Update project items
                var id = "";
                $('.editItems').click(function () {
                    CheckSession();

                    id = $(this).closest("tr").find(".hideId").text();

                    $.ajax({
                        url: "/Dashboard/GetItems",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: JSON.stringify({ id: id }),
                        success: function (projects) {
                            if (projects != null || projects != "") {

                                //Initialize CKEditor by giving id of text area
                                CKEDITOR.replace('editor1');

                                //Get each instance of CKEditor
                                for (instance in CKEDITOR.instances) {
                                    //update element
                                    CKEDITOR.instances[instance].updateElement();
                                }

                                //Set CKEditor value using jQuery
                                $.each(projects, function (i, project) {
                                    CKEDITOR.instances['editor1'].setData(project.ItemDescription);
                                    $('#id').val(project.Id);
                                    $('#projectNotes').val(project.ProjectNotes);
                                    $('#projectCreatedOn').val(getFormattedDate(project.CreatedOn));
                                    $('#createdBy').val(project.CreatedBy);
                                    $('#imagePreview').attr('src', "/img/" + project.Image + "");

                                    $("#preProjectId").text(project.ProjectId);
                                    $("#preEditor1").text(project.ItemDescription);  //Set CKEditor value using jQuery
                                    $("#preProjectNotes").text(project.ProjectNotes);
                                    $("#preUploadImg").text(project.Image);
                                    $("#preProjectCreatedOn").text(getFormattedDate(project.CreatedOn));
                                    $("#createdBy").text(project.CreatedBy);

                                    if (project.Checked == true) {
                                        $('#addCheckedStatus').prop('checked', true);
                                    } else {
                                        $('#addCheckedStatus').prop('checked', false);
                                    }
                                })

                                $('.hideThisStatus').show();
                                $('#updateData').show();
                                $('#addData').hide();
                                $('#myProjectItems').modal('show');
                            }
                        },
                        error: function (er) {
                            //alert(er);
                        }
                    });
                });

                //Check if any check boxes checked
                $('.cbCheck').change(function () {
                    CheckSession();

                    if ($('input[name="cbCheck"]:checked').length >= 1) {
                        $("#delete").show();
                        $("#confirm").show();
                        $("#approval").show();
                    } else {
                        $("#delete").hide();
                        $("#confirm").hide();
                        $("#approval").hide();
                    }
                });

                //Show update history
                $('.projectItemHistory').click(function () {
                    CheckSession();

                    $('#myProjectItemsHistory').modal('show');

                    $('#projectItemsHistory').empty();

                    var html = "";
                    id = $(this).closest("tr").find(".projectWithId").text();

                    $.ajax({
                        url: "/Dashboard/ShowProjectItemsHistory",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: JSON.stringify({ id: id }),
                        success: function (projects) {
                            if (projects != null || projects != "") {

                                html += "<div class='table-responsive'>" +
                                        "<table id='projectItemsHisDetails' class='table table-bordered'><thead>" +
                                        "<tr><th> # </th><th>Id</th><th>Details</th><th>Created On</th><th>Updated On</th><th>Updated By</th></tr></thead><tbody>";

                                $.each(projects, function (i, project) {
                                    var num = parseInt(i) + 1;

                                    html += "<tr><td>" + num + "</td>" +
                                            "<td>" + project.ProjectId + "</td>" +
                                            "<td>" + project.PreItemDescription + "</td>" +
                                            "<td>" + getFormattedDate(project.PreCreatedOn) + "</td>" +
                                            "<td>" + getFormattedDate(project.UpdatedOn) + "</td>" +
                                            "<td>" + project.PersonCreated + "</td>" +
                                            "</tr>";
                                })

                                html += "</tbody></table></div>";
                            }

                            $("#projectItemsHistory").append(html);
                        },
                        error: function (er) {
                            alert(er);
                        }
                    });
                });

                //Get image name
                String.prototype.filename = function (extension) {
                    var s = this.replace(/\\/g, '/');
                    s = s.substring(s.lastIndexOf('/') + 1);
                    return extension ? s.replace(/[?#].+$/, '') : s.split('.')[0];
                }

                //Add image src here
                $("body").on("click", "#showImages", function () {
                    CheckSession();

                    $('.images').empty();

                    var id = $(this).closest("tr").find(".hideId").text();

                    var html2 = "";
                    debugger;
                    $.ajax({
                        url: "/Dashboard/GetImages",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: JSON.stringify({ id: id }),
                        success: function (data) {
                            if (data != null || data != "") {

                                $.each(data, function (i, project) {
                                    html2 += "<div id='userDetails'><b>Changed by</b>: " + project.UserName + " <b>Date Changed</b>: " + getFormattedDate(project.CreatedOn) + "</div>";
                                    html2 += "<img width='470' height='240' src='/img/" + project.Image + "' /><br/>";
                                })
                            }

                            $('.images').html(html2);
                            $('#myProjectImages').modal('show');
                        },
                        error: function (er) {
                            //alert(er);
                        }
                    });
                });

                //Live handler for images
                lc_lightbox('.elem', {
                    wrap_class: 'lcl_fade_oc',
                    gallery: true,
                    thumb_attr: 'data-lcl-thumb',

                    skin: 'minimal',
                    radius: 0,
                    padding: 0,
                    border_w: 0,
                });
            },
            error: function (er) {
                //alert(er);
            }
        });
    }

    function getFormattedDate(date) {
        var dt = new Date(parseInt(date.replace("/Date(", "").replace(")/", ""), 10))
        var date = new Date(Date.parse(dt));

        return ('0' + (date.getMonth() + 1)).slice(-2) + "/" + ('0' + date.getDate()).slice(-2) + "/" + date.getFullYear();
    }

    function getDateFormatted(date) {
        var dt = new Date(parseInt(date.replace("/Date(", "").replace(")/", ""), 10))
        var date = new Date(Date.parse(dt));

        return date;
    }

    Date.prototype.getDateWithoutTime = function () {
        return new Date(this.toDateString());
    }

    //Validation
    function validate() {
        //Initialize CKEditor by giving id of text area
        CKEDITOR.replace('editor1');

        //Get each instance of CKEditor
        for (instance in CKEDITOR.instances) {
            //update element
            CKEDITOR.instances[instance].updateElement();
        }

        var isValid = true;

        if (CKEDITOR.instances['editor1'].getData().trim() == "") {
            $('#editor1').css('border-color', 'Red');
            isValid = false;
        }
        else {
            $('#editor1').css('border-color', 'lightgrey');
        }
        if ($('#projectCreatedOn').val().trim() == "") {
            $('#projectCreatedOn').css('border-color', 'Red');
            isValid = false;
        }
        else {
            $('#projectCreatedOn').css('border-color', 'lightgrey');
        }

        return isValid;
    }

    //Get project items for PDF
    function GetProjectItemsInPdf() {
        var html = "";
        var html2 = "";
        var id = '@ViewBag.projectId';

        var backColor = "";
        var status = "";
        var locked = "";
        var blueSection = "";

        $("#cardNew").empty();

        $.ajax({
            url: "/Dashboard/GetProjectItemsInPdf",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify({ id: id }),
            success: function (projects) {
                if (projects != null || projects != "") {

                    html += "<h4 class='card-title card-title-override hideId getProjectId'>" + projects[0].ProjectName + "</h4><div class='table-responsive'>" +
                            "<table id='projectsInPdf' class='table table-bordered table-contextual projectItems'><thead>" +
                            "<tr><th class='headingItemNo'> Item # </th><th width='40%'>Item Description</th><th width='10%'>Image</th><th width='10%' class='hideChecked'>Checked?</th></tr></thead><tbody>";

                    $.each(projects, function (i, project) {
                        if (project.Checked == true) {
                            backColor = "<td class='checked hideChecked' style='background-color:#98FB98;-webkit-print-color-adjust: exact;'>CHECKED</td>";
                        } else {
                            backColor = "<td class='checked hideChecked' style='background-color:lightpink;-webkit-print-color-adjust: exact;'></td>"
                        }

                        var val = (parseInt(i) + 1);
                        var num = (parseInt(i) + 1);
                        //var num = (parseInt(project.TotalItems) + 1) - val;

                        if (project.ProStatus == 0) {
                            $('#openModal').hide();
                        } else {
                            $('#openModal').show();
                        }

                        if (project.Status == 0) {
                            status = "<td class='hideSelect'><input type='checkbox' class='cbCheck' name='cbCheck' value='" + project.Id + "' id='" + project.Id + "' /></td>";
                            locked = "<a class='editItems' data-projectId='" + project.ProjectId + "'>Edit</a>";
                        }
                        if (project.Status == 1 || project.ProStatus == 0) {
                            status = "<td class='hideSelect'><input type='checkbox' class='cbCheck hideSelect' checked='true' disabled name='cbCheck' value='" + project.Id + "' id='" + project.Id + "' /></td>";
                            locked = "<a href='javascript:void(0);'>Edit</a>";
                        }

                        if (project.SubmittedBy != "" && project.Checked == false) {
                            blueSection = "<div style='color: red;'><i style='margin-left: -20%;font-size:10px;'><b>SUBMITTED FOR ACTION " + getDateFormatted(project.SubmittedDt).toString().slice(0, 15) + "</b></i> <b style='margin-left: 18%;font-size:10px;'>Approved by " + project.SubmittedBy + "</b></div>";
                        }

                        if (project.SubmittedBy == "") {
                            blueSection = "";
                        }

                        html += "<tr> " + status +
                                "<td class='action hideSelect'>" + locked + "</td><td>" + num + "</td>" +
                                "<td class='hide hideId projectWithId'>" + project.Id + "</td>" +
                                "<td class='detailsWidth'>" + project.ItemDescription + "</td>" +
                                "<td><img id='showImages' height='270' width='240' src='/img/" + project.Image + "' /></td>" + backColor + "</tr><tr><td class='showBlueBar' height='20' colspan='10' style='background-color: lightblue; -webkit-print-color-adjust: exact;'>" + blueSection + "</td></tr>";

                    })

                    html += "</tbody></table><div id='footer'>Job ref. " + projects[0].ProjectName + " | Gold Property Partners l 07 5438 9775 l admin@goldpp.com.au l www.goldpp.com.au l Level 1, Suite 7, 9 Capital Place, Birtinya, Qld, 4575 Property of Gold Property Partners Pty Ltd. ABN 94 611 852 307. © Copyright protected.</div>";
                }

                $("#cardNew").append(html);

                //Create pdf here
                //Generate pdf
                $("body").on("click", "#floatLeft", function () {
                    CheckSession();

                    var sTable = document.getElementById('cardNew').innerHTML;
                    var style = "<style>";
                    style = style + "@@page { size: A4 portrait; } body { -webkit-print-color-adjust: exact; border: 2px solid #1f497d; padding: 4%; margin: 0; }";
                    style = style + "table { width: 100%; font: 17px Calibri; } #showImages { height: 100px; width: 180px; } #BoxLeft { font-size:10px; width: 120%; margin: 0 auto; margin-top: 6%; height: 36px; } .Box1, .Box2 { float: left; width: 15%; } .box { height: 25px; border: 1px solid #bdbdbd; -webkit-border-radius: 5px; border-radius: 5px; -moz-box-shadow: 0 0 10px #bdbdbd; -webkit-box-shadow: 0 0 10px #bdbdbd; box-shadow: 0 0 10px #bdbdbd; } .Box1 { background-color: #002b73; color:white; -webkit-print-color-adjust: exact; } .Box2 { background-color: white; -webkit-print-color-adjust: exact; }  #BoxRight { font-size:10px; width: 120%; margin: 0 auto; margin-top: -12%; height: 36px; margin-left: -20%; } .Box3, .Box4 { float: right; width: 15%; } .Box3 { -webkit-print-color-adjust: exact; } .Box4 { background-color: #002b73; color:white; -webkit-print-color-adjust: exact; }";
                    style = style + "table, td { border: solid 2px #002b73; border-collapse: collapse; font-size:10px;";
                    style = style + "padding: 2px 3px;text-align: center; } #projectsInPdf th { height:10px; font-style:bold; font-size:10px; text-transform: uppercase; background-color: #002b73; -webkit-print-color-adjust: exact; color: white; }";
                    style = style + ".headingItemNo { width: 6%; } .detailsWidth { width:40%; } #projectsInPdf { margin-top: 0%; -webkit-print-color-adjust: exact; } .action, .hideId, .hide, .hideDate, .hideArea, .hideSelect { display:none; } .top { margin-top: -5%; margin-left: 4%; } .topAside { margin-top: -5%; margin-left: 4%; } .heading { margin-top:5%; text-align:center; } .logoGpp { height: 140px; width: 250px; display: block; margin-left: auto; margin-right: auto; -webkit-print-color-adjust: exact; }";
                    style = style + ".showFooter { border:0px; display: block; } #footer { position: fixed; bottom: 0; height: 30px; top: 96.6%; padding: 4px; border: 1px solid #1f497d; font-size: 10px; margin-left: -2%; text-align: center; width: 94%; background-color: lightblue; font-family: Arial; -webkit-print-color-adjust: exact; } </style>";

                    var win = window.open('', '', 'height=2000,width=2000');

                    win.document.write("<html><head>");
                    win.document.write(style);
                    win.document.write("</head>");
                    win.document.write("<body><img class='logoGpp' src='/img/logo.jpg' /><div class='top topAside'><div id='BoxLeft'><div class='Box1'><div class='box'><h4 class='heading'>Job Reference: </h4></div></div><div class='Box2'><div class='box'><h4 class='heading'>" + $(".card-title").html() + "</h4></div></div></div></div>");
                    win.document.write("<div class='top'><div id='BoxRight'><div class='Box3'><div class='box'><h4 class='heading'>" + $(".proCreatedOn").html() + "</h4></div></div><div class='Box4'><div class='box'><h4 class='heading'>Initiation Date: </h4></div></div></div></div><br /><br /><br />");
                    win.document.write(sTable);

                    win.document.close();

                    win.print();
                });
            },
            error: function (er) {
                //alert(er);
            }
        });
    }

    function CheckSession() {
        $.ajax({
            type: "GET",
            url: "@Url.Action("SessionInfo", "Dashboard")"
        }).done(function (data) {
            if (data === true) {
                alert("Your session expired! Please login again.");
                window.location.href = "@Url.Action("Login", "Auth")";
            }
        }).fail(function (e) {
            alert('Error');
        });
    }
</script>
